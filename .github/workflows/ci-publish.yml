name: CI and Publish to npm

on:
  workflow_dispatch:
    inputs:
      publish:
        description: "Publish to npm after tests"
        required: false
        default: "false"
  push:
    tags:
      - "v*"

permissions:
  contents: read
  id-token: write

concurrency:
  group: publish-npm
  cancel-in-progress: false

jobs:
  test:
    name: Test (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18.x, 20.x]
    # No working directory needed - we're at root
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install
        run: npm ci

      - name: Run tests
        run: npm test

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: test
    if: |
      startsWith(github.ref, 'refs/tags/v') || github.event.inputs.publish == 'true'
    # No working directory needed - we're at root
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install
        run: npm ci

      - name: Verify version and privacy
        id: pkg
        run: |
          echo "name=$(npm pkg get name | tr -d '\"')" >> $GITHUB_OUTPUT
          echo "version=$(npm pkg get version | tr -d '\"')" >> $GITHUB_OUTPUT
          echo "private=$(npm pkg get private | tr -d '\"')" >> $GITHUB_OUTPUT

      - name: Print package info
        run: echo "Publishing ${{ steps.pkg.outputs.name }}@${{ steps.pkg.outputs.version }} (private=${{ steps.pkg.outputs.private }})"

      - name: Configure npm auth
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -z "$NPM_TOKEN" ]; then echo "NPM_TOKEN secret is missing" && exit 1; fi
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

      - name: Publish (skip if private)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ "${{ steps.pkg.outputs.private }}" = "true" ]; then
            echo "package.json is private=true; skipping publish"
            exit 0
          fi
          npm publish --provenance --access public

